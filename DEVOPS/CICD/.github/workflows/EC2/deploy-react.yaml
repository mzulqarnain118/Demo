name: React CICD
'on':
  push:
    branches:
      - dev # Change to your main branch name

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        
      - name: Install dependencies
        run: |
          if [ -e yarn.lock ]; then
          yarn install --frozen-lockfile
          elif [ -e package-lock.json ]; then
          npm ci
          else
          npm i
          fi

  deploy:
    runs-on: ubuntu-latest
    needs: build

    env:
      EC2_IPADDRESS: ${{ secrets.EC2_HOST }}
      SSH_PRIVATE_KEY: ${{ secrets.EC2_KEY }}
      PROJECT_DIR: kamlink-frontend

    steps:
      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${SSH_PRIVATE_KEY}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -t rsa -H ${EC2_IPADDRESS} >> ~/.ssh/known_hosts
          eval "$(ssh-agent -s)"
          ssh-add ~/.ssh/id_rsa

      - name: Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${EC2_IPADDRESS} 'bash -ic "cd /home/ubuntu/kamlink-frontend && git pull origin dev"'
          ssh -o StrictHostKeyChecking=no ubuntu@${EC2_IPADDRESS} 'bash -ic "cd /home/ubuntu/kamlink-frontend && yarn install"'
          ssh -o StrictHostKeyChecking=no ubuntu@${EC2_IPADDRESS} 'bash -ic "cd /home/ubuntu/kamlink-frontend && yarn build"'

          # Copy build artifacts/files to a web server directory (adjust the path as needed)
          ssh -o StrictHostKeyChecking=no ubuntu@${EC2_IPADDRESS} 'sudo cp -r /home/ubuntu/kamlink-frontend/dist/* /var/www/html/${PROJECT_DIR}'
